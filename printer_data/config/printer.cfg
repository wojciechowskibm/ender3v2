[include shell_command.cfg]
# https://www.reddit.com/r/ender3/comments/10hwyd0/whos_this_svelte_ender_3_pro_canbus_conversion/
#===============================================================================
# Klipper configuration for the Voxelab Aquilla using the BTT E3EZ Board
# and the EBB42 CANBUS board. Our EBB42 is version 1.2
#===============================================================================

#=====================================================================
# Fluidd requires this to properly support display updates.
# This is a single block, with no other lines required.
#=====================================================================
[display_status]

#=====================================================================
# Enable EXCLUDE_OBJECT functionality.
#=====================================================================
[exclude_object]

#=====================================================================
# Fluidd requires this to enables Pause/Resume functionality within
# klipper. This is a single block, with no other lines required.
#=====================================================================
[pause_resume]
[include fluidd.cfg]
[include timelapse.cfg]
[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT
[include mainsail.cfg]
[include KAMP_Settings.cfg]
# [include fan_tach_monitor.cfg]

#=====================================================================
# Setup mcu's.
#=====================================================================

# host MCU service is preinstalled and ready to use with:
[mcu]
canbus_uuid=b812b8372f88
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_hurakan-if00
#mserial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2A00070012504B4B38383620-if00
#restart_method: command
#   This controls the mechanism the host will use to reset the
#   micro-controller. The choices are 'arduino', 'cheetah', 'rpi_usb',
#   and 'command'. The 'arduino' method (toggle DTR) is common on
#   Arduino boards and clones. The 'cheetah' method is a special
#   method needed for some Fysetc Cheetah boards. The 'rpi_usb' method
#   is useful on Raspberry Pi boards with micro-controllers powered
#   over USB - it briefly disables power to all USB ports to
#   accomplish a micro-controller reset. The 'command' method involves
#   sending a Klipper command to the micro-controller so that it can
#   reset itself. The default is 'arduino' if the micro-controller
#   communicates over a serial port, 'command' otherwise.

[mcu EBBCan]
canbus_uuid=bddd613dc2c5

# This file contains common pin mappings for the BIGTREETECH Manta E3EZ
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PB12/PB13)".

# See docs/Config_Reference.md for a description of parameters.

#=====================================================================
# printer
#=====================================================================
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 30 #was 5
max_z_accel: 100

#=====================================================================
# stepper_x
#=====================================================================
[stepper_x]
step_pin: PA14
dir_pin: !PA10
enable_pin: !PA13
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop #endstop_pin: ^PC4
position_min:-5
position_endstop: -5 #0
position_max: 260 #235
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PB8
diag_pin: PC4
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 100

#=====================================================================
# stepper_y
#=====================================================================
[stepper_y]
step_pin: PC8
dir_pin: !PA15
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop # endstop_pin: ^PB0
position_min:-8
position_endstop: -8 #0
position_max: 238 #235
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC9
diag_pin: PB0
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 100

#=====================================================================
# stepper_z
#  The probe section creates a virtual "probe:z_virtual_endstop" pin.
#  One may set the stepper_z endstop_pin to this virtual pin on
#  cartesian style printers that use the probe in place of a z
#  endstop. If using "probe:z_virtual_endstop" then do not define a 
#  position_endstop in the stepper_z config section.
#=====================================================================

#---------------------------------------------------------------------
# Z Stepper - Left (original) stepper
#  Connected to the board's Z stepper driver.
#---------------------------------------------------------------------
[stepper_z]
step_pin: PD2
dir_pin: !PD4
enable_pin: !PD3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 270
position_min: -6

[tmc2209 stepper_z]
uart_pin: PD0
#diag_pin: PC6
run_current: 0.800
stealthchop_threshold: 999999
#---------------------------------------------------------------------
# Z1 Stepper - Right (added) stepper.
# Connected to the board's E2 stepper driver.
#---------------------------------------------------------------------
[stepper_z1]
step_pin: PB7
dir_pin: PB6
enable_pin: !PB4
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
#position_max: 270
#position_min: 0

[tmc2209 stepper_z1]
uart_pin: PB5
#diag_pin: PC6
run_current: 0.800
stealthchop_threshold: 999999

[z_tilt]
z_positions: 65,125
             255,125
points:      65,125
             255,125
speed: 70
horizontal_move_z: 10
retries: 30
retry_tolerance: 0.01

#=====================================================================
# Extruder
#=====================================================================

[extruder]
step_pin:EBBCan: PD0     
dir_pin:EBBCan: PD1        
enable_pin:!EBBCan: PD2  
full_steps_per_rotation: 400
microsteps: 16
rotation_distance: 46.23
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13 
sensor_type: Generic 3950#EPCOS 100K B57560G104F
sensor_pin:  EBBCan: PA3 
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
min_extrude_temp: 0

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.45
sense_resistor: 0.110
stealthchop_threshold: 0

#=====================================================================
# Filament sensor
#=====================================================================

#[filament_switch_sensor material_0]
#switch_pin: PC5

#[extruder1]
#step_pin: PB7
#dir_pin: PB6
#enable_pin: !PB4
#heater_pin: PB10 # HE1
#sensor_pin: PA5 # T1

#[filament_switch_sensor material_1]
#switch_pin: PB1

#=====================================================================
# Bed Screws Titl adjust
#====================================================================

[screws_tilt_adjust]
screw1: 86, 54
screw1_name: Left_Front
screw2: 256,54
screw2_name: Right_Front
screw3: 256,224 
screw3_name: Right_Back 
screw4: 86,224
screw4_name: Left_Back
horizontal_move_z: 10
speed: 150
screw_thread: CW-M4


#=====================================================================
# Bed Heater
#  ##110Â°: pid_Kp=66.218 pid_Ki=1.388 pid_Kd=789.650
#   ##original thermistor: EPCOS 100K B57560G104F
#=====================================================================

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PA3 #TB
#control: watermark
min_temp: 0
max_temp: 130

#=====================================================================
# Fan Control
#=====================================================================

#---------------------------------------------------------------------
# Part Cooling Fan - FAN0
#---------------------------------------------------------------------
[fan] 
pin: EBBCan: PA0
kick_start_time: 0.5
off_below: 0.0


#---------------------------------------------------------------------
# Hotend Fan - FAN1
#---------------------------------------------------------------------
[heater_fan Hotend_Fan]
# pin: PB15
pin: EBBCan: PA1
tachometer_pin: EBBCan: PC15 
tachometer_ppr: 2 
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0


# [heater_fan fan2]
# pin: PB14

#[heater_fan SoC_fan]
#pin: CB1:gpio79
#pin: RPI:gpio26

#---------------------------------------------------------------------
# Controller fan in the electronics bay.
#---------------------------------------------------------------------

[temperature_fan electronics_bay]
pin: PB15
control: pid #watermark
pid_kp = 69.130
pid_ki = 0.907
pid_kd = 1316.919
#max_delta:3
sensor_type: temperature_host
min_temp:0
max_temp:100
target_temp:34
gcode_id:electronics_bay
max_speed: 0.99



#---------------------------------------------------------------------
# Controller fan for CB1.
#---------------------------------------------------------------------

[temperature_fan CB1_Fan]
pin: PB14
control: pid #watermark
pid_kp = 69.130
pid_ki = 0.907
pid_kd = 1316.919
#max_delta:3
sensor_type: temperature_host
min_temp:0
max_temp:100
target_temp:34
gcode_id:CB1_Fan
max_speed: 0.7
# hardware_pwm: False
# cycle_time: 0.100

#---------------------------------------------------------------------
# Controller fan for motors.
#---------------------------------------------------------------------

#[fan_generic Motors_Fan]
[temperature_fan Motors_Fan]
pin: PA8
control: watermark
max_delta:2
sensor_type: Generic 3950
sensor_pin:PA4
min_temp:0
max_temp:200
target_temp:34
gcode_id:Motors_Fan
max_speed: 1.0
# hardware_pwm: False
# cycle_time: 0.100


#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#sensor_type:
#sensor_pin:
#   See the "extruder" section for a description of the above parameters.

########################################
# TMC2209 configuration
########################################

#[tmc2209 stepper_x]
#uart_pin: PB8
##diag_pin: PC4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 stepper_y]
#uart_pin: PC9
##diag_pin: PB0
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 stepper_z]
#uart_pin: PD0
##diag_pin: PC6
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2209 extruder]
#uart_pin: PD1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder1]
#uart_pin: PB5
#run_current: 0.800
#stealthchop_threshold: 999999


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PC3, EXP1_5=PC0, EXP1_7=PA2, EXP1_9=<GND>,
    EXP1_2=PC2,  EXP1_4=<RST>, EXP1_6=PA0, EXP1_8=PA1, EXP1_10=<5V>

#=====================================================================
# bltouch
# Note that the z_offset is a positive value here for some reason.
# We're saying that we detect Z at n above zero, *not* that zero
# is -n below the detected point.
#=====================================================================

[bltouch]
sensor_pin: ^EBBCan: PB8
control_pin: EBBCan: PB9
x_offset: -55
y_offset: -22
# z_offset: 2.169
samples: 3
speed: 2 
# samples_result: median
# sample_retract_dist: 2.0
# samples_tolerance: 0.02
# samples_tolerance_retries: 5

[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 15,18
mesh_max: 205,216
probe_count: 5,5
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0
adaptive_margin: 5

[safe_z_home]
home_xy_position: 175,145
speed: 50
z_hop: 10     # Move up 10 mm
z_hop_speed :5 

[output_pin PS_ON]
pin: PA9
pwm: False
value: 1
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
shutdown_value: 0
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).


[gcode_macro M80] #M80: ATX Power On
gcode:
  SET_PIN PIN=PS_ON VALUE=1

[gcode_macro M81] #M81: ATX Power Off
gcode:
  SET_PIN PIN=PS_ON VALUE=0

#[output_pin pb9_pin]
#pin: PB9

#[neopixel my_neopixel]
#pin: PC7

#[adxl345]
#cs_pin: PC15
#spi_software_miso_pin: PC11
#spi_software_mosi_pin: PC12
#spi_software_sclk_pin: PC10

#=====================================================================
# Temperature Sensors
#=====================================================================

[temperature_sensor CB1]
sensor_type: temperature_host

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor EBBCan]   # with EBB added uncomment
sensor_mcu: EBBCan
sensor_type: temperature_mcu

#=====================================================================
# Macros
#=====================================================================

[gcode_macro START_PRINT]
gcode:
  G92 E0 # Reset Extruder
  G28 #Home all axes
  BED_MESH_PROFILE LOAD=DEFAULT
  BED_MESH_CALIBRATE ADAPTIVE=1 
  ADAPTIVE_MARGIN=5
  G1 Z2.0 F3000                        # Move Z Axis little to prevent scratching of Heat bed
  G1 X0.1 Y20 Z0.3 F5000               # Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500 E15        # Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000            # Move to side a little bit
  G1 X0.4 Y20 Z0.3 F1500 E30           # Draw the seconfd date
  G92 E0                               # Reset Extruder
  G1 Z2.0 F3000                        # Move Z Axis little to prevent scratching of Heat bed
  G1 X5 Y20 Z0.3 F5000                 # Move over to prevent blob squish

# [include moonraker_obico_macros.cfg]


[gcode_macro PIDtuneHOTEND]

gcode:

	{% set TEMP = params.TEMP|default(200)|float %}

	PID_CALIBRATE HEATER=extruder TARGET={TEMP}



[gcode_macro PIDtuneBED]

gcode:

    {% set TEMP = params.TEMP|default(60)|float %}

    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

[gcode_macro BeginTheProbe]

description: start process because I'm forgetful 

gcode:

    G28

    probe_calibrate

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.825
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.557
#*# pid_ki = 1.559
#*# pid_kd = 96.694
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.130
#*# pid_ki = 0.907
#*# pid_kd = 1316.919
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.042097, 0.072097, 0.007931, -0.160403, -0.123736
#*# 	  0.055431, 0.132931, 0.057097, -0.102903, -0.106236
#*# 	  0.052097, 0.114597, 0.085431, -0.087903, -0.049569
#*# 	  -0.020403, 0.069597, 0.042931, -0.063736, -0.037069
#*# 	  -0.002903, 0.042097, 0.012097, -0.137069, -0.060403
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 205.0
#*# min_y = 18.0
#*# max_y = 216.0
